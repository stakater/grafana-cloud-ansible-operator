name: Pull Request

on:
  pull_request:
    branches:
      - main

jobs:
  qa:
    uses: stakater/.github/.github/workflows/pull_request_doc_qa.yaml@v0.0.134
    with:
      MD_CONFIG: .github/md_config.json
      DOC_SRC: README.md
      MD_LINT_CONFIG: .markdownlint.yaml
  operator-pull-request:
    name: Operator Pull Request
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
# ansible-lint v25 breaks it
      - name: Run ansible-lint
        uses: ansible/ansible-lint@v24.12.2

      - name: Generate Tag
        id: generate_tag
        run: |
          sha=${{ github.event.pull_request.head.sha }}
          tag="snapshot-pr-${{ github.event.pull_request.number }}-${sha:0:8}"
          echo "GIT_TAG=$(echo ${tag})" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/stakater
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Generate image repository path
        run: |
          echo IMAGE_REPOSITORY=$(echo ghcr.io/stakater/${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Build and Push
        uses: docker/build-push-action@v6
        id: build_and_push
        with:
          context: .
          file: Dockerfile
          push: true
          cache-to: type=inline
          tags: |
            ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.GIT_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.revision=${{ github.sha }}

      # Build custom catalog for e2e tests
      - name: Generate Tag
        id: generate_tag_for_catalog
        run: |
          sha=${{ github.event.pull_request.head.sha }}
          tag="${sha:0:8}"
          echo "GIT_TAG=$(echo ${tag})" >> $GITHUB_OUTPUT

      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "github"
          operator-sdk: "v1.31.0"

      - name: Build & Push Bundle and Catalog
        run: make bundle bundle-build bundle-push catalog-build catalog-push
        env:
          IMAGE_DIGEST: ${{ steps.build_and_push.outputs.digest }}
          PR_TAG: -${{ steps.generate_tag_for_catalog.outputs.GIT_TAG }}

      - name: Comment on PR
        uses: mshick/add-pr-comment@v2
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        with:
          message-success: "@${{ github.actor }} Image is available for testing. `docker pull ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.GIT_TAG}}`"
          message-failure: '@${{ github.actor }} Yikes! You better fix it before anyone else finds out! [Build](https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}/checks) has Failed!'
          allow-repeats: true

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          fields: repo,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.STAKATER_DELIVERY_SLACK_WEBHOOK }}
