---
- name: Verify
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    ctrl_label: control-plane=controller-manager
    resources_to_fetch:
      - api_version: v1
        kind: Pod
      - api_version: apps/v1
        kind: Deployment
      - api_version: v1
        kind: Secret
      - api_version: v1
        kind: ConfigMap

  tasks:
    - name: Verify resources
      block:
        - name: Import all test files from tasks/
          ansible.builtin.include_tasks: '{{ item }}'
          with_fileglob:
            - tasks/*_test.yml
      rescue:
        - name: Precompute resource queries
          ansible.builtin.set_fact:
            resource_queries: >-
              {{
                resources_to_fetch | map('combine',
                  {'namespace': namespace}) | list
              }}

        - name: Retrieve resources
          kubernetes.core.k8s_info:
            api_version: "{{ item.api_version }}"
            kind: "{{ item.kind }}"
            namespace: "{{ item.namespace }}"
          loop: "{{ resource_queries }}"
          register: debug_resources

        - name: Query Pods with label
          ansible.builtin.set_fact:
            labeled_pods: >-
              {{
                q('k8s', api_version='v1', kind='Pod', namespace=namespace, label_selector=ctrl_label)
                | list
              }}

        - name: Retrieve Pod logs
          kubernetes.core.k8s_log:
            name: '{{ item.metadata.name }}'
            namespace: '{{ namespace }}'
            container: manager
          loop: '{{ labeled_pods }}'
          register: debug_logs

        - name: Output gathered resources
          ansible.builtin.debug:
            var: debug_resources

        - name: Output gathered logs
          ansible.builtin.debug:
            var: item.log_lines
          loop: '{{ debug_logs.results }}'

        - name: Re-emit failure
          vars:
            failed_task:
              result: '{{ ansible_failed_result }}'
          ansible.builtin.fail:
            msg: '{{ failed_task }}'
